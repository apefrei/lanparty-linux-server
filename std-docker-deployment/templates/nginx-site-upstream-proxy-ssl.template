###
### Nginx Zope Site
###
### Per default this configuration uses SSL. If you want to disable SSL, look for
### the string NOSSL-CHANGE and adapt the corresponding line

### Proxy Cacheing: Block
#proxy_cache_path                /home/sites/SITE_NAME/cache
#                                levels=1:2 
#                                keys_zone=pc_SITE_NAME:100m
#                                max_size=4000m
#                                inactive=14d;

### Redirect alias domains
server {
    server_name                 *.SITE_NAME;

    ### Use this for multiple alias domains
#    include                     /home/sites/SITE_NAME/conf/nginx-domain-aliases.conf;

    ssl_certificate             /home/sites/SITE_NAME/ssl/package.pem;
    ssl_certificate_key         /home/sites/SITE_NAME/ssl/private.key;
    listen                      *:80;
    listen                      *:443 ssl http2;
    error_log                   /home/sites/SITE_NAME/pub/log/nginx-error.log warn;
    return                      301 https://SITE_NAME$request_uri; # NOSSL-CHANGE
}

### Redirect all non-encrypted to encrypted
server {
    server_name                 SITE_NAME;
    listen                      *:80;
    error_log                   /home/sites/SITE_NAME/pub/log/error.log warn;
    return                      301 https://SITE_NAME$request_uri; # NOSSL-CHANGE
}

### Server block (aka. virtualhost)
server {
    server_name                 SITE_NAME;
    listen                      *:443 ssl http2; # NOSSL-CHANGE

    ### Uncomment to enable cache logging
#    access_log                  /home/sites/SITE_NAME/pub/log/nginx-access.log cache_log;
    error_log                   /home/sites/SITE_NAME/pub/log/nginx-error.log warn;
    root                        /home/sites/SITE_NAME/pub/httpdocs;
    index                       index.html;

    ssl_certificate             /home/sites/SITE_NAME/ssl/package.pem; # NOSSL-CHANGE
    ssl_certificate_key         /home/sites/SITE_NAME/ssl/private.key; # NOSSL-CHANGE

    ### Uncomment to allow backend only from our IPs
#    if ($not-our-ips) {
#        rewrite                 ^/login_form http://domain.tld? redirect;
#    }

    ### Primary location, matches probably last
    location / {
#        auth_basic              "Restricted Area";
#        auth_basic_user_file    /home/sites/SITE_NAME/auth/htpasswd;

        ### SPECIAL: Allow cross domain ressources
#        add_header              Access-Control-Allow-Origin *;

        ### SPECIAL: Disallow search engines by force
#        add_header              X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";

        proxy_pass              http://localhost:80;
        proxy_redirect          off;
        proxy_cache             pc_SITE_NAME;
        proxy_temp_path         /home/sites/SITE_NAME/pub/tmp;
        proxy_cache_bypass      $cookie___ac;
        add_header              X-Cache-Status $upstream_cache_status;
    }

    ### External file for SEO rewrites
    include                     /home/sites/SITE_NAME/conf/nginx-rewrites.conf;

    location /static {
        try_files               $uri $uri/ /index.html =404;
    }

    location = /favicon.ico {
        log_not_found           off;
    }

    location = /robots.txt {
        log_not_found           off;
    }

    ### Prevent access to any files starting with a dot, like .htaccess or temp files
    location ~ /\. { 
        log_not_found           off;
        deny                    all; 
    }

    ### Prevent access to any files starting with a $ (usually temp files)
    location ~ ~$ { 
        log_not_found           off; 
        deny                    all; 
    }

    ### Show "Not Found" 404 errors in place of "Forbidden" 403 errors, because
    ### forbidden errors allow attackers potential insight into your server's
    ### layout and contents
    error_page                  403 = 404;

    ### Uncomment to enable custom error pages
#    error_page                  403 /error-page/403.html;
#    error_page                  404 /error-page/404.html;
#    error_page                  405 /error-page/405.html;
#    location ^~ /error-page/ {
#        internal;
#        root                    /home/sites/SITE_NAME/pub;
#    }

    ### Error pages must have properly set http headers!
    error_page                  500 501 504 http://temp.raptus.com/overload/;
    error_page                  502 503 http://temp.raptus.com/maintenance/;

    ### Uncomment to enable maintenance mode
#    if ($not-our-ips) {
#        return                  503;
#    }

}

# eof
